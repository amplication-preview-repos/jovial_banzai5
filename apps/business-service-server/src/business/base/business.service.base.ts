/*
------------------------------------------------------------------------------ 
This code was generated by Amplication. 
 
Changes to this file will be lost if the code is regenerated. 

There are other ways to to customize your code, see this doc to learn more
https://docs.amplication.com/how-to/custom-code

------------------------------------------------------------------------------
  */
import { PrismaService } from "../../prisma/prisma.service";
import { Prisma, Business as PrismaBusiness } from "@prisma/client";

export class BusinessServiceBase {
  constructor(protected readonly prisma: PrismaService) {}

  async count(args: Omit<Prisma.BusinessCountArgs, "select">): Promise<number> {
    return this.prisma.business.count(args);
  }

  async businesses<T extends Prisma.BusinessFindManyArgs>(
    args: Prisma.SelectSubset<T, Prisma.BusinessFindManyArgs>
  ): Promise<PrismaBusiness[]> {
    return this.prisma.business.findMany<Prisma.BusinessFindManyArgs>(args);
  }
  async business<T extends Prisma.BusinessFindUniqueArgs>(
    args: Prisma.SelectSubset<T, Prisma.BusinessFindUniqueArgs>
  ): Promise<PrismaBusiness | null> {
    return this.prisma.business.findUnique(args);
  }
  async createBusiness<T extends Prisma.BusinessCreateArgs>(
    args: Prisma.SelectSubset<T, Prisma.BusinessCreateArgs>
  ): Promise<PrismaBusiness> {
    return this.prisma.business.create<T>(args);
  }
  async updateBusiness<T extends Prisma.BusinessUpdateArgs>(
    args: Prisma.SelectSubset<T, Prisma.BusinessUpdateArgs>
  ): Promise<PrismaBusiness> {
    return this.prisma.business.update<T>(args);
  }
  async deleteBusiness<T extends Prisma.BusinessDeleteArgs>(
    args: Prisma.SelectSubset<T, Prisma.BusinessDeleteArgs>
  ): Promise<PrismaBusiness> {
    return this.prisma.business.delete(args);
  }
}
